{
  "Synopsis": "Formats a given string by adding spaces before uppercase letters, digits, and non-word characters.",
  "Description": "The Format-AddSpaceToSentence function takes a string or an array of strings\nand adds a space before each uppercase letter, digit, and non-word character (excluding dots, spaces, and underscores).\nIt also provides options to convert the string to lowercase, remove certain characters before or after the formatting, and remove double spaces.",
  "Parameters": [
    {
      "Name": null,
      "Type": null,
      "Description": "",
      "Required": false,
      "Position": 0,
      "Aliases": null,
      "DefaultValue": null,
      "Globbing": false,
      "PipelineInput": null,
      "variableLength": false
    }
  ],
  "Notes": [
    "The function uses the -creplace operator to add spaces, which is case-insensitive. Therefore, it will add spaces before both uppercase and lowercase letters if they are specified in the RemoveCharsBefore or RemoveCharsAfter parameters."
  ],
  "CommandType": "Function",
  "Component": [
    null
  ],
  "Inputs": [
    null
  ],
  "Outputs": [
    null
  ],
  "Links": [],
  "Examples": [
    {
      "Title": "EXAMPLE 1",
      "Markdown": "",
      "Code": "$test = @(\r\n    'OnceUponATime',\r\n    'OnceUponATime1',\r\n    'Money@Risk',\r\n    'OnceUponATime123',\r\n    'AHappyMan2014'\r\n    'OnceUponATime_123'\r\n    'Domain test.com'\r\n)\r\nFormat-StringToSentence -Text $Test -RemoveCharsAfter '_' -RemoveDoubleSpaces\r\n\r\nThis example formats each string in the $test array, removes any underscores after the formatting, and removes any double spaces."
    },
    {
      "Title": "EXAMPLE 2",
      "Markdown": "",
      "Code": "$test = @(\r\n    'OnceUponATime',\r\n    'OnceUponATime1',\r\n    'Money@Risk',\r\n    'OnceUponATime123',\r\n    'AHappyMan2014'\r\n    'OnceUponATime_123'\r\n    'Domain test.com'\r\n)\r\n$Test | Format-StringToSentence -ToLowerCase -RemoveCharsAfter '_' -RemoveDoubleSpaces\r\n\r\nThis example does the same as the previous one, but also converts each string to lowercase."
    },
    {
      "Title": "EXAMPLE 3",
      "Markdown": "",
      "Code": "$test = @(\r\n    'OnceUponATime',\r\n    'OnceUponATime1',\r\n    'Money@Risk',\r\n    'OnceUponATime123',\r\n    'AHappyMan2014'\r\n    'OnceUponATime_123'\r\n    'Domain test.com'\r\n)\r\nFormat-StringToSentence -Text $Test -RemoveCharsAfter '_' -RemoveDoubleSpaces -MakeWordsUpperCase 'test.com', 'money'"
    }
  ]
}
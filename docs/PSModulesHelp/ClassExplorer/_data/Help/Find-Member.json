{
  "Synopsis": "Find properties, methods, fields, etc that fit specific criteria.",
  "Description": "The Find-Member cmdlet searches the process for type members that fit specified criteria. You can search in any loaded assemblies, specific types, or filter an existing list of members.",
  "Parameters": [
    {
      "Name": null,
      "Type": null,
      "Description": "",
      "Required": false,
      "Position": 0,
      "Aliases": null,
      "DefaultValue": null,
      "Globbing": false,
      "PipelineInput": null,
      "variableLength": false
    }
  ],
  "Notes": [
    ""
  ],
  "CommandType": "Cmdlet",
  "Component": [
    null
  ],
  "Inputs": [
    "System.Type, System.Reflection.MemberInfo, PSObject"
  ],
  "Outputs": [
    "System.Reflection.MemberInfo"
  ],
  "Links": [
    "https://github.com/SeeminglyScience/ClassExplorer/blob/master/docs/en-US/Find-Member.md",
    null,
    null,
    null,
    null
  ],
  "Examples": [
    {
      "Title": "EXAMPLE 1",
      "Markdown": "",
      "Code": "Find-Member GetPowerShell\r\n\r\n#    ReflectedType: System.Management.Automation.ScriptBlock\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# GetPowerShell         Method       public PowerShell GetPowerShell(object[] args);\r\n# GetPowerShell         Method       public PowerShell GetPowerShell(bool isTrustedInput, object[]…\r\n# GetPowerShell         Method       public PowerShell GetPowerShell(Dictionary<string, object> va…\r\n# GetPowerShell         Method       public PowerShell GetPowerShell(Dictionary<string, object> va…\r\n# GetPowerShell         Method       public PowerShell GetPowerShell(Dictionary<string, object> va…\r\nFind all members in the AppDomain with the name \"GetPowerShell\""
    },
    {
      "Title": "EXAMPLE 2",
      "Markdown": "",
      "Code": "[System.IO.Stream] | Find-Member -ParameterType { [anyof[Span[any], Memory[any]]] }\r\n\r\n#    ReflectedType: System.IO.Stream\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# ReadAsync             Method       public virtual ValueTask<int> ReadAsync(Memory<byte> buffer, …\r\n# Read                  Method       public virtual int Read(Span<byte> buffer);\r\nFind all members that take a `Span<>` or a `Memory<>` as a parameter."
    },
    {
      "Title": "EXAMPLE 3",
      "Markdown": "",
      "Code": "Find-Member -ParameterCount 0 -GenericParameter { [T[new]] }\r\n\r\n#    ReflectedType: Markdig.Parsers.InlineParserList\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# AddIfNotAlready       Method       public void AddIfNotAlready<TItem>();\r\n#\r\n#    ReflectedType: Markdig.Parsers.ParserList<T, TState>\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# AddIfNotAlready       Method       public void AddIfNotAlready<TItem>();\r\n#\r\n#    ReflectedType: Markdig.Parsers.OrderedList<T>\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# AddIfNotAlready       Method       public void AddIfNotAlready<TItem>();\r\nFind all methods with no parameters and with a generic parameter with the `new` constraint."
    },
    {
      "Title": "EXAMPLE 4",
      "Markdown": "",
      "Code": "Find-Member Emit -ParameterCount ..1, 7..8, 10..\r\n\r\n#    ReflectedType: System.Reflection.Emit.ILGenerator\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# Emit                  Method       public virtual void Emit(OpCode opcode);\r\n#\r\n#    ReflectedType: Microsoft.CodeAnalysis.Compilation\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# Emit                  Method       public EmitResult Emit(Stream peStream, St…\r\n# Emit                  Method       public EmitResult Emit(Stream peStream, St…\r\n# Emit                  Method       public EmitResult Emit(Stream peStream, St…\r\n# Emit                  Method       public EmitResult Emit(Stream peStream, St…\r\n#\r\n#    ReflectedType: Microsoft.CodeAnalysis.FileSystemExtensions\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# Emit                  Method       public static EmitResult Emit(this Compila…\r\nFind all methods named `Emit` whose parameter count is any of the following:\r\n\r\n1. `..1`: Less than or equal to 1 2. `7..8`: Between 7 and 8 inclusive 3. `10..`: Greater than or equal to 10"
    },
    {
      "Title": "EXAMPLE 5",
      "Markdown": "",
      "Code": "Find-Member -ReturnType System.Management.Automation.Language.Ast -Static\r\n\r\n#    ReflectedType: System.Management.Automation.CommandCompletion\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# MapStringInputToPars… Method       public static Tuple<Ast, Token[], IScriptPosition> MapStringI…\r\n#\r\n#    ReflectedType: System.Management.Automation.Language.UsingExpressionAst\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# ExtractUsingVariable  Method       public static VariableExpressionAst ExtractUsingVariable(Usin…\r\n#\r\n#    ReflectedType: System.Management.Automation.Language.Parser\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# ParseFile             Method       public static ScriptBlockAst ParseFile(string fileName, out T…\r\n# ParseInput            Method       public static ScriptBlockAst ParseInput(string input, out Tok…\r\n# ParseInput            Method       public static ScriptBlockAst ParseInput(string input, string …\r\nFind all static members in the AppDomain that return any type of AST."
    },
    {
      "Title": "EXAMPLE 6",
      "Markdown": "",
      "Code": "Find-Member -ParameterType runspace -Virtual\r\n\r\n#    ReflectedType: System.Management.Automation.Host.IHostSupportsInteractiveSession\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# PushRunspace          Method       public abstract void PushRunspace(Runspace runspace);\r\n#\r\n#    ReflectedType: Microsoft.PowerShell.Internal.IPSConsoleReadLineMockableMethods\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# RunspaceIsRemote      Method       public abstract bool RunspaceIsRemote(Runspace runspace);\r\nFind all virtual members in the AppDomain that take any runspace type as a parameter."
    },
    {
      "Title": "EXAMPLE 7",
      "Markdown": "",
      "Code": "Find-Member Parse* -ParameterType System.Management.Automation.Language.Token\r\n\r\n#    ReflectedType: System.Management.Automation.Language.Parser\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# ParseFile             Method       public static ScriptBlockAst ParseFile(string fileName, out T…\r\n# ParseInput            Method       public static ScriptBlockAst ParseInput(string input, out Tok…\r\n# ParseInput            Method       public static ScriptBlockAst ParseInput(string input, string …\r\nFind all members that start with the word Parse and take Token as a parameter. This example also demonstrates how this will even match the element of a type that is both an array and ByRef type."
    },
    {
      "Title": "EXAMPLE 8",
      "Markdown": "",
      "Code": "[runspace] | Find-Member -Force -Abstract | Find-Member -Not -AccessView Child\r\n\r\n#    ReflectedType: System.Management.Automation.Runspaces.Runspace\r\n#\r\n# Name                  MemberType   Definition\r\n# ----                  ----------   ----------\r\n# GetCurrentlyRunningP… Method       internal abstract Pipeline GetCurrentlyRunningPipeline();\r\n# SetApplicationPrivat… Method       internal abstract void SetApplicationPrivateData(PSPrimitiveD…\r\n# GetSessionStateProxy  Method       internal abstract SessionStateProxy GetSessionStateProxy();\r\n# HasAvailabilityChang… Property     internal abstract bool HasAvailabilityChangedSubscribers { ge…\r\n# GetExecutionContext   Property     internal abstract ExecutionContext GetExecutionContext { get;…\r\n# InNestedPrompt        Property     internal abstract bool InNestedPrompt { get; }\r\nFind all members that are required to be implemented (abstract) but cannot be implemented outside of the origin assembly."
    },
    {
      "Title": "EXAMPLE 9",
      "Markdown": "",
      "Code": "$members = Find-Member -Force\r\n$members.Count\r\n# 286183\r\nFind all members in the AppDomain including non-public."
    }
  ]
}
{
  "Synopsis": "Gets the script analyzer rules on the local computer.",
  "Description": "Gets the script analyzer rules on the local computer. You can select rules by Name, Severity, Source, or SourceType, or even particular words in the rule description.\r\n\r\n\r\nUse this cmdlet to create collections of rules to include and exclude when running the `Invoke-ScriptAnalyzer` cmdlet.\r\n\r\n\r\nTo get information about the rules, see the value of the Description property of each rule.\r\n\r\n\r\nThe PSScriptAnalyzer module tests the PowerShell code in a script, module, or DSC resource to determine if it fulfils best practice standards.",
  "Parameters": [
    {
      "Name": null,
      "Type": null,
      "Description": "",
      "Required": false,
      "Position": 0,
      "Aliases": null,
      "DefaultValue": null,
      "Globbing": false,
      "PipelineInput": null,
      "variableLength": false
    }
  ],
  "Notes": [
    ""
  ],
  "CommandType": "Cmdlet",
  "Component": [
    null
  ],
  "Inputs": [
    "None"
  ],
  "Outputs": [
    "Microsoft.Windows.PowerShell.ScriptAnalyzer.Generic.RuleInfo"
  ],
  "Links": [
    "https://learn.microsoft.com/powershell/module/psscriptanalyzer/get-scriptanalyzerrule?view=ps-modules&wt.mc_id=ps-gethelp",
    null,
    "https://github.com/PowerShell/PSScriptAnalyzer"
  ],
  "Examples": [
    {
      "Title": "EXAMPLE 1 - Get all Script Analyzer rules on the local computer",
      "Markdown": "",
      "Code": "Get-ScriptAnalyzerRule"
    },
    {
      "Title": "EXAMPLE 2 - Gets only rules with the Error severity",
      "Markdown": "",
      "Code": "Get-ScriptAnalyzerRule -Severity Error"
    },
    {
      "Title": "EXAMPLE 3 - Run only the DSC rules with the Error severity",
      "Markdown": "",
      "Code": "$DSCError = Get-ScriptAnalyzerRule -Severity Error | Where-Object SourceName -eq PSDSC\r\n$Path = \"$home\\Documents\\WindowsPowerShell\\Modules\\MyDSCModule\\*\"\r\nInvoke-ScriptAnalyzerRule -Path $Path -IncludeRule $DSCError -Recurse\r\nUsing the IncludeRule parameter of `Invoke-ScriptAnalyzerRule` is more efficient than using its Severity parameter, which is applied only after using all rules to analyze all module files."
    },
    {
      "Title": "EXAMPLE 4 - Get rules by name and severity",
      "Markdown": "",
      "Code": "$TestParameters = Get-ScriptAnalyzerRule -Severity Error, Warning -Name *Parameter*, *Alias*"
    },
    {
      "Title": "EXAMPLE 5 - Get custom rules",
      "Markdown": "",
      "Code": "Get-ScriptAnalyzerRule -CustomRulePath $home\\Documents\\WindowsPowerShell\\Modules\\*StrictRules -RecurseCustomRulePath"
    }
  ]
}
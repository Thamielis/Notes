{
  "Synopsis": "Split a command for a collection of input objects into multiple threads for asynchronous processing",
  "Description": "The specified command will be run for each input object in a separate powershell instance with its own runspace\nThese runspaces are part of the same runspace pool inside the same powershell.exe process",
  "Parameters": [
    {
      "Name": null,
      "Type": null,
      "Description": "",
      "Required": false,
      "Position": 0,
      "Aliases": null,
      "DefaultValue": null,
      "Globbing": false,
      "PipelineInput": null,
      "variableLength": false
    }
  ],
  "Notes": [
    null
  ],
  "CommandType": "Function",
  "Component": [
    null
  ],
  "Inputs": [
    null
  ],
  "Outputs": [
    null
  ],
  "Links": [],
  "Examples": [
    {
      "Title": "EXAMPLE 1",
      "Markdown": "",
      "Code": "The following demonstrates sending a Cmdlet name to the -Command parameter\r\n    $InputObject | Split-Thread -Command 'Write-Output'"
    },
    {
      "Title": "EXAMPLE 2",
      "Markdown": "",
      "Code": "The following demonstrates sending a scriptblock to the -Command parameter\r\n    $InputObject | Split-Thread -Command [scriptblock]::create(\"Write-Output `$args[0]\")"
    },
    {
      "Title": "EXAMPLE 3",
      "Markdown": "",
      "Code": "The following demonstrates sending a script file path to the -Command parameter\r\n    $InputObject | Split-Thread -Command \"C:\\Test-Command.ps1\""
    },
    {
      "Title": "EXAMPLE 4",
      "Markdown": "",
      "Code": "The following demonstrates sending a function to the -Command parameter\r\n    $InputObject | Split-Thread -Command 'Test-Function'"
    },
    {
      "Title": "EXAMPLE 5",
      "Markdown": "",
      "Code": "The following demonstrates the -AddParam parameter\r\n$InputObject | Split-Thread -Command \"Get-Service\" -InputParameter ComputerName -AddParam @{\"Name\" = \"BITS\"}"
    },
    {
      "Title": "EXAMPLE 6",
      "Markdown": "",
      "Code": "The following demonstrates the -AddSwitch parameter\r\n$InputObject | Split-Thread -Command \"Get-Service\" -AddSwitch @('RequiredServices','DependentServices')"
    },
    {
      "Title": "EXAMPLE 7",
      "Markdown": "",
      "Code": "The following demonstrates the use of a threadsafe hashtable to store results\r\nThe hastable can be accessed and updated from inside each runspace\r\n$ThreadsafeHashtable = [hashtable]::Synchronized(@{})\r\n$InputObject | Split-Thread -Command \"Fake-Function\" -InputParameter ComputerName -AddParam @{\"ResultHashTableParameter\" = $ThreadsafeHashtable}"
    }
  ]
}
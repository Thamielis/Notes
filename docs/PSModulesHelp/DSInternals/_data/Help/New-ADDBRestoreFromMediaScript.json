{
  "Synopsis": "Generates a PowerShell script that can be used to restore a domain controller from an IFM-equivalent backup (i.e. ntds.dit + SYSVOL).",
  "Description": "The New-ADDBRestoreFromMediaScript cmdlet was created to save the day under certain specific circumstances. Imagine a company that had been attacked by some ransomware to the extent that all their domain controllers have been wiped. Moreover, no proper System State backups of DCs are available, only file-level ones. As a consequence, they are not able to restore Active Directory, the time is ticking and their only option seems to be reinstalling the entire AD forest from scratch. It might be hard to believe that someone would have violated all the best practices and neglected planning for disaster recovery, but, alas, such situations have occurred in large enterprises during the 2017 NotPetya outbreak. I have therefore come up with a domain controller recovery method that I call Restore from Media (RFM). As already hinted, this method can be used to restore domain controllers from file-level backups.\r\n\r\n\r\nUnlike the Install from Media (IFM) (https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc816722(v=ws.10)) method, the Restore from Media method does not require network connectivity to a live writable domain controller. Nevertheless, the same installation source ([IFM backup](https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc816574(v=ws.10)) with SYSVOL)can be used with both methods of DC installation.\r\n\r\n\r\nTo perform the Restore from Media operation, you need to have the following:\r\n\r\n\r\n- A full Install from Media (IFM) backup of a domain controller or equivalent file-level backup. The backup must contain these files:\r\n\r\n\r\n- Domain database file (ntds.dit)\r\n\r\n\r\n- SYSTEM registry hive or a corresponding Boot Key / SysKey\r\n\r\n\r\n- SYSVOL directory\r\n\r\n\r\n- A freshly installed Windows Server of the same version as the domain controller originally running the database that is to be restored. This information can be retrieved from the corresponding ntds.dit file using the Get-ADDBDomainController (Get-ADDBDomainController.md)cmdlet.\r\n\r\n\r\n- An isolated VLAN / virtual network as connectivity to any existing production domain controllers would have unforseen consequences.\r\n\r\n\r\nFollow these steps on the target server in order to restore the domain controller:\r\n\r\n\r\n1. In case of Windows Server 2008 (R2), run the `$PSVersionTable.PSVersion` to verify that at least PowerShell 3 is installed. Upgrade (https://docs.microsoft.com/en-us/powershell/wmf/overview)if necessary.\r\n\r\n\r\n2. Verify that the PowerShell Script Execution Policy (https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-6)is set to RemoteSigned, Unrestricted or Bypass in the LocalMachine scope.\r\n\r\n\r\n3. Install (https://github.com/MichaelGrafnetter/DSInternals/wiki/Installation)the DSInternals PowerShell module for all users.\r\n\r\n\r\n4. Copy the backup data to a local drive, e.g. C:\\Backup.\r\n\r\n\r\n5. Run the `New-ADDBRestoreFromMediaScript -DatabasePath 'C:\\Backup\\Active Directory\\ntds.dit' | Invoke-Expression` command.\r\n\r\n\r\n6. Sit back and watch the magic happen. Up to 3 reboots will follow and the entire process may take up to 20 minutes to finish. You should then end up with a fully functional domain controller.\r\n\r\n\r\nThe script that is generated by the `New-ADDBRestoreFromMediaScript` cmdlet does the following actions:\r\n\r\n\r\n- Rename the server to match the original domain controller.\r\n\r\n\r\n- Install a new forest by promoting the server to a domain controller.\r\n\r\n\r\n- Replace the newly generated database file (ntds.dit) and SYSVOL directory by the original ones.\r\n\r\n\r\n- Re-encrypt the database using the local Boot Key.\r\n\r\n\r\n- Write the newly generated machine account password into ntds.dit.\r\n\r\n\r\n- Update the LSA Policy to match the SID and GUID of the domain that is being restored.\r\n\r\n\r\n- Reset the Invocation ID of the domain controller.\r\n\r\n\r\n- Reconfigure SYSVOL replication in case it has been restored to a different path.",
  "Parameters": [
    {
      "Name": null,
      "Type": null,
      "Description": "",
      "Required": false,
      "Position": 0,
      "Aliases": null,
      "DefaultValue": null,
      "Globbing": false,
      "PipelineInput": null,
      "variableLength": false
    }
  ],
  "Notes": [
    "This recovery procedure is NOT SUPPORTED by Microsoft. Use at your own risk in situations when Active Directory forest reinstallation is the only other option."
  ],
  "CommandType": "Cmdlet",
  "Component": [
    null
  ],
  "Inputs": [
    "None"
  ],
  "Outputs": [
    "System.String"
  ],
  "Links": [
    "https://github.com/MichaelGrafnetter/DSInternals/blob/master/Documentation/PowerShell/New-ADDBRestoreFromMediaScript.md",
    null,
    null
  ],
  "Examples": [
    {
      "Title": "Example 1",
      "Markdown": "",
      "Code": "PS C:\\> New-ADDBRestoreFromMediaScript -DatabasePath 'C:\\IFM\\Active Directory\\ntds.dit' | Invoke-Expression\r\nRestores a domain controller from a previously created IFM backup."
    },
    {
      "Title": "Example 2",
      "Markdown": "",
      "Code": "PS C:\\> New-ADDBRestoreFromMediaScript -DatabasePath 'C:\\IFM\\Active Directory\\ntds.dit' -BootKey 610bc29e6f62ca7004e9872cd51a0116 -SysvolPath 'C:\\IFM\\SYSVOL'\r\nGenerates a domain controller restoration script from a previously created IFM backup. The script can then be reviewed, modified if necessary and executed manually."
    },
    {
      "Title": "Example 3",
      "Markdown": "",
      "Code": "ntdsutil.exe \"activate instance ntds\" ifm \"create sysvol full c:\\IFM\" quit quit\r\nCreates an Install From Media (IFM) backup of a running domain controller. This backup can later be used by the New-ADDBRestoreFromMediaScript cmdlet."
    },
    {
      "Title": "Example 4",
      "Markdown": "",
      "Code": "<#\r\n.SYNOPSIS\r\nRestores the LON-DC1 domain controller from ntds.dit.\r\n\r\n.REMARKS\r\nThis script should only be executed on a freshly installed Windows Server 2012 R2 Datacenter Evaluation. Use at your own risk.\r\nThe DSInternals PowerShell module must be installed for all users on the target server.\r\n\r\n\r\nAuthor: Michael Grafnetter\r\n\r\n#>\r\n#Requires -Version 3 -Modules DSInternals,ServerManager,PSScheduledJob -RunAsAdministrator\r\n\r\n# Perform a VSS backup before doing anything else.\r\nWrite-Host 'Creating a snapshot of the system drive to make rollback possible...'\r\n$vssResult = ([wmiclass] 'Win32_ShadowCopy').Create(\"$env:SystemDrive\\\", 'ClientAccessible')\r\n\r\n# The PS module must be present as workflows cannot contain non-existing activities.\r\nWrite-Host 'Installing the Active Directory module for Windows PowerShell...'\r\nAdd-WindowsFeature -Name RSAT-AD-PowerShell -ErrorAction Stop \r\n\r\n# All the other operations will be executed by a restartable workflow running in SYSTEM context.\r\nWrite-Host 'Registering restartable workflows...'\r\n\r\n# Delete any pre-existing scheduled jobs with the same names before registering new ones.\r\nUnregister-ScheduledJob -Name DSInternals-RFM-Initializer,DSInternals-RFM-Resumer -Force -ErrorAction SilentlyContinue\r\n\r\n# The DSInternals-RFM-Initializer job will only be executed once in order to register the workflow and to invoke it for the first time.\r\n$initTask = Register-ScheduledJob -Name DSInternals-RFM-Initializer -ScriptBlock {\r\n    workflow Restore-DomainController\r\n    {\r\n        if ($env:COMPUTERNAME -ne 'LON-DC1')\r\n        {\r\n            # A server rename operation is required.\r\n            Rename-Computer -NewName 'LON-DC1' -Force\r\n            \r\n            # We explicitly suspend the workflow as Restart-Computer with the -Wait parameter does not survive local reboots.\r\n            shutdown.exe /r /t 5\r\n            Suspend-Workflow -Label 'Waiting for reboot'\r\n        }\r\n\r\n        if ((Get-Service NTDS -ErrorAction SilentlyContinue) -eq $null)\r\n        {\r\n            # A DC promotion is required.\r\n            # Note: In order to maintain compatibility with Windows Server 2008 R2, the ADDSDeployment module is not used.\r\n            # Advice: It is recommenced to change the DSRM password after DC promotion.\r\n            dcpromo.exe /unattend /ReplicaOrNewDomain:Domain /NewDomain:Forest /NewDomainDNSName:\"adatum.com\" /DomainNetBiosName:\"ADATUM\" /DomainLevel:7 /ForestLevel:7 '/SafeModeAdminPassword:\"Pa$$w0rd\"' /DatabasePath:\"$env:SYSTEMROOT\\NTDS\" /LogPath:\"$env:SYSTEMROOT\\NTDS\" /SysVolPath:\"$env:SYSTEMROOT\\SYSVOL\" /AllowDomainReinstall:Yes /CreateDNSDelegation:No /DNSOnNetwork:No /InstallDNS:Yes /RebootOnCompletion:No\r\n            Set-ItemProperty -Path registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\ServerManager\\Roles\\10 -Name ConfigurationStatus -Value 2 -Force\r\n\r\n            <# Alternative approach for Winows Server 2012+\r\n            Install-WindowsFeature -Name AD-Domain-Services\r\n            Install-ADDSForest -DomainName 'adatum.com' `\r\n                               -DomainNetbiosName 'ADATUM' `\r\n                               -ForestMode WinThreshold `\r\n                               -DomainMode WinThreshold `\r\n                               -DatabasePath \"$env:SYSTEMROOT\\NTDS\" `\r\n                               -LogPath \"$env:SYSTEMROOT\\NTDS\" `\r\n                               -SysvolPath \"$env:SYSTEMROOT\\SYSVOL\" `\r\n                               -InstallDns `\r\n                               -CreateDnsDelegation:$false `\r\n                               -NoDnsOnNetwork `\r\n                               -SafeModeAdministratorPassword (ConvertTo-SecureString -String 'Pa$$w0rd' -AsPlainText -Force)`\r\n                               -NoRebootOnCompletion `\r\n                               -Force\r\n            #>\r\n        }\r\n\r\n        # Reboot the computer into the Directory Services Restore Mode.\r\n        bcdedit.exe /set safeboot dsrepair \r\n        shutdown.exe /r /t 5\r\n        Suspend-Workflow -Label 'Waiting for reboot'\r\n\r\n        # Re-encrypt the DB with the new boot key.\r\n        $currentBootKey = Get-BootKey -Online\r\n        Set-ADDBBootKey -DatabasePath 'C:\\Backup\\Active Directory\\ntds.dit' -LogPath 'C:\\Backup\\Active Directory' -OldBootKey 610bc29e6f62ca7004e9872cd51a0116 -NewBootKey $currentBootKey -Force\r\n\r\n        # Clone the DC account password.\r\n        $ntdsParams = Get-ItemProperty -Path registry::HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\NTDS\\Parameters\r\n        InlineScript {\r\n            # Note: SupplementalCredentials do not get serialized properly without using the InlineScript activity.\r\n            $dcAccount = Get-ADDBAccount -SamAccountName 'LON-DC1$' -DatabasePath $using:ntdsParams.'DSA Database file' -LogPath $using:ntdsParams.'Database log files path' -BootKey $using:currentBootKey\r\n            Set-ADDBAccountPasswordHash -ObjectGuid 9bb4d6f4-060a-4585-9f18-625774e7c088 -NTHash $dcAccount.NTHash -SupplementalCredentials $dcAccount.SupplementalCredentials -DatabasePath 'C:\\Backup\\Active Directory\\ntds.dit' -LogPath 'C:\\Backup\\Active Directory' -BootKey $using:currentBootKey -Force\r\n        }\r\n\r\n        # Replace the database and transaction logs.\r\n        robocopy.exe 'C:\\Backup\\Active Directory' $ntdsParams.'DSA Working Directory' *.dit *.edb *.chk *.jfm /MIR /NP /NDL /NJS\r\n        robocopy.exe 'C:\\Backup\\Active Directory' $ntdsParams.'Database log files path' *.log *.jrs /MIR /NP /NDL /NJS\r\n\r\n        # Replace SYSVOL.\r\n        robocopy.exe 'C:\\Backup\\SYSVOL\\Adatum.com' \"$env:SYSTEMROOT\\SYSVOL\\domain\" /MIR /XD DfsrPrivate /XJ /COPYALL /SECFIX /TIMFIX /NP /NDL\r\n\r\n        # Reconfigure LSA policies. We would get into a BSOD loop if they do not match the corresponding values in the database.\r\n        Set-LsaPolicyInformation -DomainName 'ADATUM' -DnsDomainName 'Adatum.com' -DnsForestName 'Adatum.com' -DomainGuid 279b615e-ae79-4c86-a61a-50f687b9f7b8 -DomainSid S-1-5-21-1817670852-3242289776-1304069626\r\n\r\n        # Tell the DC that its DB has intentionally been restored. A new InvocationID will be generated as soon as the service starts.\r\n        Set-ItemProperty -Path registry::HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\NTDS\\Parameters -Name 'Database restored from backup' -Value 1 -Force\r\n        Remove-ItemProperty -Path registry::HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\NTDS\\Parameters -Name 'DSA Database Epoch' -Force\r\n\r\n        # Disable DSRM and do one last reboot.\r\n        bcdedit.exe /deletevalue safeboot\r\n        shutdown.exe /r /t 5\r\n        Suspend-Workflow -Label 'Waiting for reboot'\r\n\r\n        # Reconfigure SYSVOL replication in case it has been restored to a different path.\r\n\r\n        # Update DFS-R subscription if present in AD.\r\n        $dfsrSubscriptionDN = 'CN=SYSVOL Subscription,CN=Domain System Volume,CN=DFSR-LocalSettings,CN=LON-DC1,OU=Domain Controllers,DC=Adatum,DC=com'\r\n        $dfsrSubscription = Set-ADObject -Identity $dfsrSubscriptionDN -Server localhost -PassThru -ErrorAction SilentlyContinue -Replace @{\r\n            'msDFSR-RootPath' = \"$env:SYSTEMROOT\\SYSVOL\\domain\";\r\n            'msDFSR-StagingPath' = \"$env:SYSTEMROOT\\SYSVOL\\staging areas\\Adatum.com\"\r\n        }\r\n\r\n        if($dfsrSubscription -ne $null)\r\n        {\r\n            # Download the updated DFS-R configuration from AD.\r\n            Invoke-WmiMethod -Class DfsrConfig -Name PollDsNow -ArgumentList localhost -Namespace ROOT\\MicrosoftDfs\r\n        }\r\n\r\n        # Update FRS subscription if present in AD.\r\n        $frsSubscriptionDN = 'CN=Domain System Volume (SYSVOL share),CN=NTFRS Subscriptions,CN=LON-DC1,OU=Domain Controllers,DC=Adatum,DC=com'\r\n        $frsSubscription = Set-ADObject -Identity $frsSubscriptionDN -Server localhost -PassThru -ErrorAction SilentlyContinue -Replace @{\r\n            'fRSRootPath' = \"$env:SYSTEMROOT\\SYSVOL\\domain\";\r\n            'fRSStagingPath' = \"$env:SYSTEMROOT\\SYSVOL\\staging\\domain\"\r\n        }\r\n\r\n        if($frsSubscription -ne $null)\r\n        {\r\n            # Download the updated FRS configuration from AD.\r\n            InlineScript { ntfrsutl.exe poll /now }\r\n        }\r\n    }\r\n\r\n    # Delete any pre-existing workflows with the same name before starting a new one.\r\n    Remove-Job -Name DSInternals-RFM-Workflow -Force -ErrorAction SilentlyContinue\r\n\r\n    # Start the workflow.\r\n    Restore-DomainController -JobName DSInternals-RFM-Workflow\r\n}\r\n\r\n# The DSInternals-RFM-Resumer job will be executed after each reboot to unpause the workflow.\r\n$resumeTask = Register-ScheduledJob -Name DSInternals-RFM-Resumer -Trigger (New-JobTrigger -AtStartup) -ScriptBlock {\r\n    # Unregister the one-time task that must already have been executed.\r\n    Unregister-ScheduledJob -Name DSInternals-RFM-Initializer -Force -ErrorAction SilentlyContinue\r\n\r\n    # Resume the workflow after the computer is rebooted.\r\n    Resume-Job -Name DSInternals-RFM-Workflow -Wait | Wait-Job | where State -In Completed,Failed,Stopped | foreach {\r\n        # Perform cleanup when finished.\r\n        Remove-Job -Job $PSItem -Force\r\n        Unregister-ScheduledJob -Name DSInternals-RFM-Resumer -Force\r\n    }\r\n}\r\n\r\n# Configure the scheduled tasks to run under the SYSTEM account.\r\n# Note: In order to maintain compatibility with Windows Server 2008 R2, the ScheduledTasks module is not used.\r\nschtasks.exe /Change /TN '\\Microsoft\\Windows\\PowerShell\\ScheduledJobs\\DSInternals-RFM-Initializer' /RU SYSTEM | Out-Null\r\nschtasks.exe /Change /TN '\\Microsoft\\Windows\\PowerShell\\ScheduledJobs\\DSInternals-RFM-Resumer' /RU SYSTEM | Out-Null\r\n\r\n# Start the workflow task and let the magic happen.\r\nWrite-Host 'The LON-DC1 domain controller will now be restored from media. Up to 3 reboots will follow.'\r\npause\r\n$initTask.RunAsTask()"
    }
  ]
}
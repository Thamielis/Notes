{
  "Synopsis": "Creates an object representing Windows Hello for Business or FIDO credentials from its binary representation or an X.509 certificate.",
  "Description": "This cmdlet can be used to display existing key credentials from Active Directory (including NGC, STK and FIDO keys) and to generate new NGC credentials from self-signed certificates. See the examples for more info.",
  "Parameters": [
    {
      "Name": null,
      "Type": null,
      "Description": "",
      "Required": false,
      "Position": 0,
      "Aliases": null,
      "DefaultValue": null,
      "Globbing": false,
      "PipelineInput": null,
      "variableLength": false
    }
  ],
  "Notes": [
    ""
  ],
  "CommandType": "Cmdlet",
  "Component": [
    null
  ],
  "Inputs": [
    "System.String[]"
  ],
  "Outputs": [
    "DSInternals.Common.Data.KeyCredential"
  ],
  "Links": [
    "https://github.com/MichaelGrafnetter/DSInternals/blob/master/Documentation/PowerShell/Get-ADKeyCredential.md",
    null,
    null,
    null,
    null
  ],
  "Examples": [
    {
      "Title": "Example 1",
      "Markdown": "",
      "Code": "PS C:\\> Get-ADObject -LDAPFilter '(msDS-KeyCredentialLink=*)' -Properties msDS-KeyCredentialLink |\r\n            Select-Object -ExpandProperty msDS-KeyCredentialLink |\r\n            Get-ADKeyCredential\r\n<# Sample Output:\r\n\r\nUsage Source  Flags       DeviceId                             Created    Owner\r\n----- ------  -----       --------                             -------    -----\r\nNGC   AD      None        cfe9a872-13ff-4751-a777-aec88c30a762 2019-08-01 CN=John Doe,CN=Users,DC=contoso,DC=com\r\nSTK   AD      None                                             2017-08-23 CN=PC01,CN=Computers,DC=contoso,DC=com\r\nNGC   AD      MFANotUsed                                       2017-08-23 CN=PC02,CN=Computers,DC=contoso,DC=com\r\nNGC   AzureAD None        fd591087-245c-4ff5-a5ea-c14de5e2b32d 2017-07-19 CN=John Doe,CN=Users,DC=contoso,DC=com\r\nFIDO  AzureAD Attestation 00000000-0000-0000-0000-000000000000 2019-08-26 CN=John Doe,CN=Users,DC=contoso,DC=com\r\n\r\n#>\r\nLists all key credentials that are registered in Active Directory."
    },
    {
      "Title": "Example 2",
      "Markdown": "",
      "Code": "PS C:\\> Get-ADObject -LDAPFilter '(msDS-KeyCredentialLink=*)' -Properties msDS-KeyCredentialLink |\r\n            Select-Object -ExpandProperty msDS-KeyCredentialLink |\r\n            Get-ADKeyCredential |\r\n            Where-Object Usage -eq NGC |\r\n            Format-Table -View ROCA\r\n<# Sample Output:\r\n\r\nUsage IsWeak Source  DeviceId                             Created    Owner\r\n----- ------ ------  --------                             -------    -----\r\nNGC   True   AzureAD fd591087-245c-4ff5-a5ea-c14de5e2b32d 2017-07-19 CN=John Doe,CN=Users,DC=contoso,DC=com\r\nNGC   False  AD      1966d4da-14da-4581-a7a7-5e8e07e93ad9 2019-08-01 CN=Jane Doe,CN=Users,DC=contoso,DC=com\r\n\r\n#>\r\nLists weak public keys registered in Active Directory that were generated on ROCA-vulnerable TPMs."
    },
    {
      "Title": "Example 3",
      "Markdown": "",
      "Code": "PS C:\\> Get-ADObject -LDAPFilter '(msDS-KeyCredentialLink=*)' -Properties msDS-KeyCredentialLink |\r\n            Select-Object -ExpandProperty msDS-KeyCredentialLink |\r\n            Get-ADKeyCredential |\r\n            Where-Object Usage -eq NGC |\r\n            Format-Custom -View Moduli |\r\n            Out-File -FilePath .\\moduli.txt -Encoding ascii -Force\r\nExports all RSA public key moduli from NGC keys to a file in BASE64 encoding. This format is supported by the original Python ROCA Detection Tool."
    },
    {
      "Title": "Example 4",
      "Markdown": "",
      "Code": "PS C:\\> Get-ADObject -LDAPFilter '(msDS-KeyCredentialLink=*)' -Properties msDS-KeyCredentialLink |\r\n            Select-Object -ExpandProperty msDS-KeyCredentialLink |\r\n            Get-ADKeyCredential |\r\n            Where-Object Usage -eq FIDO |\r\n            Format-Table -View FIDO\r\n<# Sample Output:\r\n\r\nDisplayName           AAGUID                               Alg   Counter Created    Owner\r\n-----------           ------                               ---   ------- -------    -----\r\neWMB Goldengate G320  87dbc5a1-4c94-4dc8-8a47-97d800fd1f3c ES256      37 2019-08-29 CN=John Doe,CN=Users,DC=contoso,DC=com\r\neWBM Goldengate G310  95442b2e-f15e-4def-b270-efb106facb4e ES256      48 2019-08-29 CN=John Doe,CN=Users,DC=contoso,DC=com\r\nYubikey 5             cb69481e-8ff7-4039-93ec-0a2729a154a8 ES256      25 2019-06-21 CN=John Doe,CN=Users,DC=contoso,DC=com\r\nFeitian All-In-Pass   12ded745-4bed-47d4-abaa-e713f51d6393 ES256    1398 2020-03-31 CN=John Doe,CN=Users,DC=contoso,DC=com\r\n\r\n#>\r\nLists FIDO tokens registered in Active Directory."
    },
    {
      "Title": "Example 5",
      "Markdown": "",
      "Code": "PS C:\\> Get-ADUser -Identity john -Properties msDS-KeyCredentialLink |\r\n    Select-Object -ExpandProperty msDS-KeyCredentialLink |\r\n    Get-ADKeyCredential |\r\n    Out-GridView -OutputMode Multiple -Title 'Select a credentials for removal...' |\r\n    ForEach-Object { Set-ADObject -Identity $PSItem.Owner -Remove @{ 'msDS-KeyCredentialLink' = $PSItem.ToDNWithBinary() } }\r\nSelectively deletes key credentials from Active Directory."
    },
    {
      "Title": "Example 6",
      "Markdown": "",
      "Code": "PS C:\\> $upn = 'john@contoso.com'\r\nPS C:\\> $userSid = 'S-1-5-21-1236425271-2880748467-2592687428-1109'\r\nPS C:\\> $certificateSubject = '{0}/{1}/login.windows.net/383a3889-5bc9-47a3-846c-2b70f0b7fe0e/{2}' -f $userSid, (New-Guid), $upn\r\nPS C:\\> $certificate = New-SelfSignedCertificate -Subject $certificateSubject `\r\n                                                 -KeyLength 2048 `\r\n                                                 -Provider 'Microsoft Strong Cryptographic Provider' `\r\n                                                 -CertStoreLocation Cert:\\CurrentUser\\My `\r\n                                                 -NotAfter (Get-Date).AddYears(30) `\r\n                                                 -TextExtension '2.5.29.19={text}false', '2.5.29.37={text}1.3.6.1.4.1.311.20.2.2' `\r\n                                                 -SuppressOid '2.5.29.14' `\r\n                                                 -KeyUsage None `\r\n                                                 -KeyExportPolicy Exportable\r\nPS C:\\> $ngcKey = Get-ADKeyCredential -Certificate $certificate -DeviceId (New-Guid) -OwnerDN 'CN=John Doe,CN=Users,DC=contoso,DC=com'\r\nPS C:\\> Set-ADObject -Identity $ngcKey.Owner -Add @{ 'msDS-KeyCredentialLink' = $ngcKey.ToDNWithBinary() }\r\nGenerates a new NGC key for a user account and registers it in Active Directory. Note that the value of the certificate Subject has no effect on the functionality, but as it appears in DC logs, this example uses the same format as Windows does."
    },
    {
      "Title": "Example 7",
      "Markdown": "",
      "Code": "PS C:\\> $certificate = New-SelfSignedCertificate -Subject 'S-1-5-21-1236425271-2880748467-2592687428-1001' `\r\n                                                 -KeyLength 2048 `\r\n                                                 -Provider 'Microsoft Strong Cryptographic Provider' `\r\n                                                 -CertStoreLocation Cert:\\LocalMachine\\My `\r\n                                                 -NotAfter (Get-Date).AddYears(30) `\r\n                                                 -TextExtension '2.5.29.19={text}false', '2.5.29.37={text}1.3.6.1.4.1.311.20.2.2' `\r\n                                                 -SuppressOid '2.5.29.14' `\r\n                                                 -KeyUsage None `\r\n                                                 -KeyExportPolicy Exportable\r\nPS C:\\> $ngcKey = Get-ADKeyCredential -IsComputerKey -Certificate $certificate -OwnerDN 'CN=PC01,CN=Computers,DC=contoso,DC=com'\r\nPS C:\\> Set-ADComputer -Identity 'PC01$' -Clear msDS-KeyCredentialLink -Add @{ 'msDS-KeyCredentialLink' = $ngcKey.ToDNWithBinary() }\r\nPerforms a validated write of computer NGC key. Must be executed under the computer account's identity."
    }
  ]
}
{
  "Synopsis": "Performs AD audit, including checks for weak, duplicate, default and empty passwords. Accepts input from the Get-ADReplAccount and Get-ADDBAccount cmdlets.",
  "Description": "The Test-PasswordQuality cmdlet is a simple tool for Active Directory password auditing. It can detect weak, duplicate, default, non-expiring or empty passwords and find accounts that are violating security best practices. The cmdlet accepts output of the Get-ADDBAccount and Get-ADReplAccount cmdlets, so both offline (ntds.dit) and online (DCSync) password analysis can be done.\r\n\r\n\r\nLists of leaked passwords that can be obtained from HaveIBeenPwned are fully supported. Be sure to download the list that is marked as \"NTLM (ordered by hash)\" and extract the archive to your HDD.\r\n\r\n\r\nAlthough the cmdlet output is formatted in a human readable fashion, it is still an object, whose properties can be accessed separately (e.g. $result.WeakPassword) to produce a desired output. When scripted, it can be used to audit Active Directory passwords on a regular basis.",
  "Parameters": [
    {
      "Name": null,
      "Type": null,
      "Description": "",
      "Required": false,
      "Position": 0,
      "Aliases": null,
      "DefaultValue": null,
      "Globbing": false,
      "PipelineInput": null,
      "variableLength": false
    }
  ],
  "Notes": [
    ""
  ],
  "CommandType": "Cmdlet",
  "Component": [
    null
  ],
  "Inputs": [
    "DSInternals.Common.Data.DSAccount"
  ],
  "Outputs": [
    "DSInternals.PowerShell.PasswordQualityTestResult"
  ],
  "Links": [
    "https://github.com/MichaelGrafnetter/DSInternals/blob/master/Documentation/PowerShell/Test-PasswordQuality.md",
    null,
    null
  ],
  "Examples": [
    {
      "Title": "Example 1",
      "Markdown": "",
      "Code": "PS C:\\> Get-ADDBAccount -All -DatabasePath ntds.dit -BootKey acdba64a3929261b04e5270c3ef973cf |\r\n          Test-PasswordQuality -WeakPasswordHashesSortedFilePath P:\\pwnedpasswords_ntlm\r\n          <# Sample Output:\r\n\r\nActive Directory Password Quality Report\r\n----------------------------------------\r\n\r\nPasswords of these accounts are stored using reversible encryption:\r\n  CONTOSO\\smith\r\n  CONTOSO\\doe\r\n\r\nLM hashes of passwords of these accounts are present:\r\n  CONTOSO\\hodge\r\n\r\nThese accounts have no password set:\r\n  CONTOSO\\test01\r\n  CONTOSO\\test02\r\n\r\nPasswords of these accounts have been found in the dictionary:\r\n  CONTOSO\\Administrator\r\n\r\nThese groups of accounts have the same passwords:\r\n  Group 1:\r\n    CONTOSO\\graham\r\n    CONTOSO\\graham_admin\r\n  Group 2:\r\n    CONTOSO\\admin\r\n    CONTOSO\\sql_svc01\r\n\r\nThese user accounts have the SamAccountName as password:\r\n  CONTOSO\\sccm_admin\r\n\r\nThese computer accounts have default passwords:\r\n  CONTOSO\\DESKTOP27$\r\n\r\nKerberos AES keys are missing from these accounts:\r\n  CONTOSO\\sql_svc01\r\n\r\nKerberos pre-authentication is not required for these accounts:\r\n  CONTOSO\\jboss\r\n\r\nOnly DES encryption is allowed to be used with these accounts:\r\n  CONTOSO\\sql_svc01\r\n\r\nThese accounts are susceptible to the Kerberoasting attack:\r\n  CONTOSO\\Administrator\r\n  CONTOSO\\sp_svc01\r\n  CONTOSO\\sql_svc02\r\n\r\nThese administrative accounts are allowed to be delegated to a service:\r\n  CONTOSO\\AdatumAdmin\r\n  CONTOSO\\Administrator\r\n\r\nPasswords of these accounts will never expire:\r\n  CONTOSO\\admin\r\n  CONTOSO\\sql_svc01\r\n\r\nThese accounts are not required to have a password:\r\n  CONTOSO\\gonzales\r\n\r\nThese accounts that require smart card authentication have a password:\r\n  CONTOSO\\smithj\r\n  CONTOSO\\jonesp\r\n#>\r\nPerforms an offline credential hygiene audit of AD database against HIBP."
    },
    {
      "Title": "Example 2",
      "Markdown": "",
      "Code": "PS C:\\> $results = Get-ADReplAccount -All -Server LON-DC1 |\r\n                   Test-PasswordQuality -WeakPasswords 'Pa$$w0rd','April2019' `\r\n                                        -WeakPasswordHashesSortedFile pwned-passwords-ntlm-ordered-by-hash-v8.txt\r\nPerforms an online credential hygiene audit of AD against HIBP + a custom wordlist."
    },
    {
      "Title": "Example 3",
      "Markdown": "",
      "Code": "PS C:\\> $pwnedUsers = $accounts |\r\n                      Test-PasswordQuality -WeakPasswordsFile rockyou.txt -SkipDuplicatePasswordTest |\r\n                      Select-Object -ExpandProperty WeakPassword\r\nPerforms a dictionary attack against a set of accounts. The Test-PasswordQuality cmdlet always returns structured data."
    },
    {
      "Title": "Example 4",
      "Markdown": "",
      "Code": "PS C:\\> Get-ADDBAccount -All -DatabasePath ntds.dit -BootKey $key |\r\n            where DistinguishedName -like '*OU=Employees,DC=contoso,DC=com' |\r\n            Test-PasswordQuality -IncludeDisabledAccounts -WeakPasswordHashesSortedFile pwned-passwords-ntlm-ordered-by-hash-v5.txt\r\nPerforms an offline credential hygiene audit of a selected OU from AD database against HIBP."
    },
    {
      "Title": "Example 5",
      "Markdown": "",
      "Code": "PS C:\\> $contosoAccounts = Get-ADReplAccount -All -Server LON-DC1.contoso.com\r\nPS C:\\> $adatumAccounts = Get-ADReplAccount -All -Server NYC-DC1.adatum.com -Credential (Get-Credential)\r\nPS C:\\> $contosoAccounts + $adatumAccounts | Test-PasswordQuality\r\n<# Sample Output (Partial):\r\n\r\nThese groups of accounts have the same passwords:\r\n  Group 1:\r\n    ADATUM\\smith\r\n    ADATUM\\doe\r\n  Group 2:\r\n    ADATUM\\Administrator\r\n    ADATUM\\joe_admin\r\n    CONTOSO\\Administrator\r\n    CONTOSO\\joe_admin\r\n#>\r\nPerforms a cross-forest duplicate password discovery. Any number of Get-ADReplAccount and Get-ADDBAccount cmdlet outputs can be combined together, as long as the computer has enough memory."
    }
  ]
}
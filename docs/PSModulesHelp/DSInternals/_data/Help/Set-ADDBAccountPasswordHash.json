{
  "Synopsis": "Sets the password hash for a user, computer, or service account stored in a ntds.dit file.",
  "Description": "Writes the specified NT hash and optionally an entire supplementalCredentials data structure into an offline database. Also enables cross-database / cross-forest password migration without the requirement of a domain trust being in place.",
  "Parameters": [
    {
      "Name": null,
      "Type": null,
      "Description": "",
      "Required": false,
      "Position": 0,
      "Aliases": null,
      "DefaultValue": null,
      "Globbing": false,
      "PipelineInput": null,
      "variableLength": false
    }
  ],
  "Notes": [
    ""
  ],
  "CommandType": "Cmdlet",
  "Component": [
    null
  ],
  "Inputs": [
    "System.Byte[]",
    "DSInternals.Common.Data.SupplementalCredentials",
    "System.String",
    "System.Security.Principal.SecurityIdentifier",
    "System.Guid"
  ],
  "Outputs": [
    "None"
  ],
  "Links": [
    "https://github.com/MichaelGrafnetter/DSInternals/blob/master/Documentation/PowerShell/Set-ADDBAccountPasswordHash.md",
    null,
    null,
    null,
    null,
    null
  ],
  "Examples": [
    {
      "Title": "Example 1",
      "Markdown": "",
      "Code": "PS C:\\> $pass = Read-Host -AsSecureString -Prompt 'Provide new password for user hacker'\r\nPS C:\\> $hash = ConvertTo-NTHash $pass\r\nPS C:\\> Set-ADDBAccountPasswordHash -SamAccountName john `\r\n                                    -NTHash $hash `\r\n                                    -DatabasePath '.\\ADBackup\\Active Directory\\ntds.dit' `\r\n                                    -BootKey 0be7a2afe1713642182e9b96f73a75da\r\nPerforms an offline password reset for user john by injecting a raw NT hash value."
    }
  ]
}
{
  "Synopsis": "Replaces labels on an issue in the given GitHub repository.",
  "Description": "Replaces labels on an issue in the given GitHub repository.\n\nThe Git repo for this module can be found here: http://aka.ms/PowerShellForGitHub",
  "Parameters": [
    {
      "Name": null,
      "Type": null,
      "Description": "",
      "Required": false,
      "Position": 0,
      "Aliases": null,
      "DefaultValue": null,
      "Globbing": false,
      "PipelineInput": null,
      "variableLength": false
    }
  ],
  "Notes": [
    "This is implemented as a function rather than a filter because the ValueFromPipeline\nparameter (Name) is itself an array which we want to ensure is processed only a single time.\nThis API endpoint doesn't add labels to a repository, it replaces the existing labels with\nthe new set provided, so we need to make sure that we have all the requested labels available\nto us at the time that the API endpoint is called."
  ],
  "CommandType": "Function",
  "Component": [
    null
  ],
  "Inputs": [
    "GitHub.Branch\nGitHub.Content\nGitHub.Event\nGitHub.Issue\nGitHub.IssueComment\nGitHub.Label\nGitHub.Milestone\nGitHub.PullRequest\nGitHub.Project\nGitHub.ProjectCard\nGitHub.ProjectColumn\nGitHub.Reaction\nGitHub.Release\nGitHub.ReleaseAsset\nGitHub.Repository"
  ],
  "Outputs": [
    "GitHub.Label"
  ],
  "Links": [],
  "Examples": [
    {
      "Title": "EXAMPLE 1",
      "Markdown": "",
      "Code": "Set-GitHubIssueLabel -OwnerName microsoft -RepositoryName PowerShellForGitHub -Issue 1 -Label $labels\r\nReplaces labels on an issue in the PowerShellForGitHub project."
    },
    {
      "Title": "EXAMPLE 2",
      "Markdown": "",
      "Code": "('help wanted', 'good first issue') | Set-GitHubIssueLabel -OwnerName microsoft -RepositoryName PowerShellForGitHub -Issue 1\r\nReplaces labels on an issue in the PowerShellForGitHub project\r\nwith 'help wanted' and 'good first issue'."
    },
    {
      "Title": "EXAMPLE 3",
      "Markdown": "",
      "Code": "Set-GitHubIssueLabel -OwnerName microsoft -RepositoryName PowerShellForGitHub -Issue 1 -Confirm:$false\r\nRemoves all labels from issue 1 in the PowerShellForGitHub project.\r\nWill not prompt for confirmation, as -Confirm:$false was specified.\r\n\r\nThis is the same result as having called\r\nRemove-GitHubIssueLabel -OwnerName microsoft -RepositoryName PowerShellForGitHub -Issue 1 -Confirm:$false"
    },
    {
      "Title": "EXAMPLE 4",
      "Markdown": "",
      "Code": "Set-GitHubIssueLabel -OwnerName microsoft -RepositoryName PowerShellForGitHub -Issue 1 -Force\r\nRemoves all labels from issue 1 in the PowerShellForGitHub project.\r\nWill not prompt for confirmation, as -Force was specified.\r\n\r\nThis is the same result as having called\r\nRemove-GitHubIssueLabel -OwnerName microsoft -RepositoryName PowerShellForGitHub -Issue 1 -Force"
    }
  ]
}
{
  "Synopsis": "Generates Pester tests automatically for PowerShell Classes",
  "Description": "Creates a Describe block for the class constructors, and for the Class Methods.\nEach of the describe block will contain child 'it' blocks which contains the corresponding tests.\n\nFor each Method and Constructor the following tests will be created:\n1) test to ensure that the command doesn't throw\n2) for methods, it will first create an instance (using a parameterless constructor by default), then check if the return type is of the right type (for voided methods, it will check that nothing is returned.)\n3) For Static Methods, it will check it will Check that when it is called, it doens't throws an error, and validated the return type is correct. (For voided methods it will check that nothing is returned.)",
  "Parameters": [
    {
      "Name": null,
      "Type": null,
      "Description": "",
      "Required": false,
      "Position": 0,
      "Aliases": null,
      "DefaultValue": null,
      "Globbing": false,
      "PipelineInput": null,
      "variableLength": false
    }
  ],
  "Notes": [
    "Author: StÃ©phane van Gulick\nVersion: 1.0.0"
  ],
  "CommandType": "Function",
  "Component": [
    null
  ],
  "Inputs": [
    "File containing Classes. Or folder containing files that contain classes."
  ],
  "Outputs": [
    "Void\nOr\nWhen Passthru is specified\n    [Directory.IO.FileInfo]"
  ],
  "Links": [
    "https://github.com/Stephanevg/PsClassUtils"
  ],
  "Examples": [
    {
      "Title": "EXAMPLE 1",
      "Markdown": "The File C:\\plop.ps1 MUST contain at least one class.",
      "Code": "write-CupesterTest -Path C:\\plop.ps1\r\n#Generates a C:\\plop.Tests.Ps1 file with pester tests in it."
    },
    {
      "Title": "EXAMPLE 2",
      "Markdown": "",
      "Code": "write-CupesterTest -Path C:\\plop.ps1 -Verbose\r\nVERBOSE: [PSClassUtils][write-CupesterTest] Generating tests for C:\\Plop.ps1\r\nVERBOSE: [PSClassUtils][write-CupesterTest][Woop] Starting tests Generating process for class --> [Woop]\r\nVERBOSE: [PSClassUtils][write-CupesterTest]--> [Woop][Constructors] Generating 'Describe' block for Constructors\r\nVERBOSE: [PSClassUtils][write-CupesterTest]--> [Woop][Constructors] Generating 'IT' blocks\r\nVERBOSE: [PSClassUtils][write-CupesterTest]--> [Woop] --> [Woop]::new()\r\nVERBOSE: [PSClassUtils][write-CupesterTest]--> [Woop] --> [Woop]::new([String]String,[int]Number)\r\nVERBOSE: [PSClassUtils][write-CupesterTest]--> [Woop][Methods]\r\nVERBOSE: [PSClassUtils][write-CupesterTest]--> [Woop] --> DoSomething()\r\nVERBOSE: [PSClassUtils][write-CupesterTest]--> [Woop] --> TrickyMethod($Salutations,$IsthatTrue)\r\nVERBOSE: [PSClassUtils][write-CupesterTest]--> [Woop] --> VoidedMethod()\r\nVERBOSE: [PSClassUtils][write-CupesterTest]--> [Woop] --> MyStaticMethod()\r\nVERBOSE: [PSClassUtils][write-CupesterTest]--> [Export] -->Exporting tests file to: Microsoft.PowerShell.Core\\FileSystem::C:\\Plop.Tests.Ps1"
    },
    {
      "Title": "EXAMPLE 3",
      "Markdown": "",
      "Code": "write-CupesterTest -Path C:\\plop.ps1 -IgnoreParameterLessConstructor\r\n#This example will return create all the tests, except for the parameterLess constructor (which can be usefull for inheritence / 'interface' situations.)"
    },
    {
      "Title": "EXAMPLE 4",
      "Markdown": "",
      "Code": "write-CupesterTest -ModuleFolderPath \"C:\\Program files\\WindowsPowershell\\Modules\\plop\\\""
    }
  ]
}
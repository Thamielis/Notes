{
  "Synopsis": "Adds a PivotTable (and optional PivotChart) to a workbook.",
  "Description": "If the PivotTable already exists, the source data will be updated.",
  "Parameters": [
    {
      "Name": null,
      "Type": null,
      "Description": "",
      "Required": false,
      "Position": 0,
      "Aliases": null,
      "DefaultValue": null,
      "Globbing": false,
      "PipelineInput": null,
      "variableLength": false
    }
  ],
  "Notes": [
    ""
  ],
  "CommandType": "Function",
  "Component": [
    null
  ],
  "Inputs": [
    null
  ],
  "Outputs": [
    "OfficeOpenXml.Table.PivotTable.ExcelPivotTable"
  ],
  "Links": [
    null
  ],
  "Examples": [
    {
      "Title": "EXAMPLE 1",
      "Markdown": "",
      "Code": "PS\\> $excel = Get-Service | Export-Excel -Path test.xlsx -WorksheetName Services -PassThru -AutoSize -DisplayPropertySet -TableName ServiceTable -Title \"Services on $Env:COMPUTERNAME\"\r\n    Add-PivotTable -ExcelPackage $excel  -PivotTableName ServiceSummary   -SourceRange $excel.Workbook.Worksheets\\[1\\].Tables\\[0\\].Address -PivotRows Status -PivotData Name -NoTotalsInPivot -Activate\r\n     Close-ExcelPackage $excel -Show\r\nThis exports data to new workbook and creates a table with the data in it.\r\n\r\nThe Pivot table is added on its own page, the table created in the first command is used as the source for the PivotTable; which counts the service names in for each Status.\r\n\r\nAt the end the Pivot page is made active."
    },
    {
      "Title": "EXAMPLE 2",
      "Markdown": "",
      "Code": "PS\\>  $chartdef = New-ExcelChartDefinition -Title \"Gross and net by city and product\"  -ChartType ColumnClustered `\r\n         -Column 11 -Width 500 -Height 360 -YMajorUnit 500 -YMinorUnit 100 -YAxisNumberformat \"$#,##0\" -LegendPosition Bottom\r\n      $excel = ConvertFrom-Csv    @\"\r\nProduct, City, Gross, Net\r\nApple, London , 300, 250\r\nOrange, London , 400, 350\r\nBanana, London , 300, 200\r\nOrange, Paris,   600, 500\r\nBanana, Paris,   300, 200\r\nApple, New York, 1200,700\r\n\"@  | Export-Excel  -Path \"test.xlsx\"  -TableStyle Medium13 -tablename \"RawData\" -PassThru\r\n      Add-PivotTable -PivotTableName Sales -Address $excel.Workbook.Worksheets[1].Cells[\"F1\"] `\r\n            -SourceWorkSheet $excel.Workbook.Worksheets[1]  -PivotRows City -PivotColumns Product -PivotData @{Gross=\"Sum\";Net=\"Sum\"} `\r\n            -PivotNumberFormat \"$#,##0.00\"  -PivotTotals Both  -PivotTableStyle Medium12 -PivotChartDefinition $chartdef\r\n      Close-ExcelPackage -show $excel\r\nThis script starts by defining a chart.\r\n\r\nThen it exports some data to an XLSX file and keeps the file open.\r\n\r\nThe next step is to add the pivot table, normally this would be on its own sheet in the workbook, but here -Address is specified to place it beside the data.\r\n\r\nThe Add-Pivot table is given the chart definition and told to create a tale using the City field to create rows, the Product field to create columns and the data should be the sum of the gross field and the sum of the net field; grand totals for both gross and net are included for rows (Cities) and columns (Products) and the data is explicitly formatted as a currency.\r\n\r\nNote that in the chart definition the number format for the axis does not include any fraction part."
    },
    {
      "Title": "EXAMPLE 3",
      "Markdown": "",
      "Code": "PS> $excel = Convertfrom-csv @\"\r\nLocation,OrderDate,quantity\r\nBoston,1/1/2017,100\r\nNew York,1/21/2017,200\r\nBoston,1/11/2017,300\r\nNew York,1/9/2017,400\r\nBoston,1/18/2017,500\r\nBoston,2/1/2017,600\r\nNew York,2/21/2017,700\r\nNew York,2/11/2017,800\r\nBoston,2/9/2017,900\r\nBoston,2/18/2017,1000\r\nNew York,1/1/2018,100\r\nBoston,1/21/2018,200\r\nNew York,1/11/2018,300\r\nBoston,1/9/2018,400\r\nNew York,1/18/2018,500\r\nBoston,2/1/2018,600\r\nBoston,2/21/2018,700\r\nNew York,2/11/2018,800\r\nNew York,2/9/2018,900\r\nBoston,2/18/2018,1000\r\n\"@ |  Select-Object -Property @{n=\"OrderDate\";e={[datetime]::ParseExact($_.OrderDate,\"M/d/yyyy\",(Get-Culture))}},\r\n        Location, Quantity |  Export-Excel \"test2.xlsx\" -PassThru -AutoSize\r\n      Set-ExcelColumn -Worksheet $excel.sheet1 -Column 1 -NumberFormat 'Short Date'\r\n      $pt = Add-PivotTable -PassThru -PivotTableName \"ByDate\" -Address $excel.Sheet1.cells[\"F1\"] -SourceWorkSheet $excel.Sheet1  -PivotRows location,orderdate -PivotData @{'quantity'='sum'}  -GroupDateRow orderdate -GroupDatePart 'Months,Years' -PivotTotals None\r\n      $pt.RowFields[0].SubtotalTop=$false\r\n      $pt.RowFields[0].Compact=$false\r\n      Close-ExcelPackage $excel -Show\r\nHere the data contains dates formatted as strings using US format.\r\n\r\nThese are converted to DateTime objects before being exported to Excel; the \"OrderDate\" column is formatted with the local short-date style.\r\n\r\nThen the PivotTable is added; it groups information by date and location, the date is split into years and then months.\r\n\r\nNo grand totals are displayed.\r\n\r\nThe Pivot table object is caught in a variable, and the \"Location\" column has its subtotal moved from the top to the bottom of each location section, and the \"Compact\" option is disabled to prevent \"Year\" moving into the same column as location.\r\n\r\nFinally the workbook is saved and shown in Excel."
    }
  ]
}
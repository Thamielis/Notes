{
  "Synopsis": "Merges Worksheets into a single Worksheet with differences marked up.",
  "Description": "The Merge Worksheet command combines two sheets. Merge-MultipleSheets is designed to merge more than two.\r\n\r\n\r\nIf asked to merge sheets A,B,C which contain Services, with a Name, Displayname and Start mode, where \"Name\" is treated as the key, Merge-MultipleSheets:\r\n\r\n\r\n* Calls Merge-Worksheet to merge \"Name\", \"Displayname\" and \"Startmode\" from sheets A and C;  the result has column headings  \"_Row\", \"Name\", \"DisplayName\", \"Startmode\", \"C-DisplayName\", \"C-StartMode\", \"C-Is\" and \"C-Row\".\r\n\r\n\r\n* Calls Merge-Worksheet again passing it the intermediate result and sheet B, comparing \"Name\", \"Displayname\" and \"Start mode\" columns on each side, and gets a result with columns \"_Row\", \"Name\", \"DisplayName\", \"Startmode\", \"B-DisplayName\",  \"B-StartMode\", \"B-Is\", \"B-Row\", \"C-DisplayName\", \"C-StartMode\", \"C-Is\" and \"C-Row\".\r\n\r\n\r\n\r\n\r\nAny columns on the \"reference\" side which are not used in the comparison are added on the right, which is why we compare the sheets in reverse order.\r\n\r\n\r\nThe \"Is\" columns hold \"Same\", \"Added\", \"Removed\" or \"Changed\" and is used for conditional formatting in the output sheet (these columns are hidden by default), and when the data is written to Excel the \"reference\" columns, in this case \"DisplayName\" and \"Start\" are renamed to reflect their source, so they become \"A-DisplayName\" and \"A-Start\".\r\n\r\n\r\nConditional formatting is also applied to the Key column (\"Name\" in this case) so the view can be filtered to rows with changes by filtering this column on color.\r\n\r\n\r\nNote: the processing order can affect what is seen as a change.For example, if there is an extra item in sheet B in the example above, Sheet C will be processed first and that row and will not be seen to be missing. When sheet B is processed it is marked as an addition, and the conditional formatting marks the entries from sheet A to show that a values were added in at least one sheet.\r\n\r\nHowever if Sheet B is the reference sheet, A and C will be seen to have an item removed; and if B is processed before C, the extra item is known when C is processed and so C is considered to be missing that item.\r\n",
  "Parameters": [
    {
      "Name": null,
      "Type": null,
      "Description": "",
      "Required": false,
      "Position": 0,
      "Aliases": null,
      "DefaultValue": null,
      "Globbing": false,
      "PipelineInput": null,
      "variableLength": false
    }
  ],
  "Notes": [
    ""
  ],
  "CommandType": "Function",
  "Component": [
    null
  ],
  "Inputs": [
    null
  ],
  "Outputs": [
    null
  ],
  "Links": [
    null
  ],
  "Examples": [
    {
      "Title": "EXAMPLE 1",
      "Markdown": "",
      "Code": "PS\\> dir Server*.xlsx | Merge-MulipleSheets -WorksheetName Services -OutputFile Test2.xlsx -OutputSheetName Services -Show\r\nHere we are auditing servers and each one has a workbook in the current directory which contains a \"Services\" Worksheet (the result of Get-WmiObject -Class win32_service \\| Select-Object -Property Name, Displayname, Startmode). No key is specified so the key is assumed to be the \"Name\" column. The files are merged and the result is opened on completion."
    },
    {
      "Title": "EXAMPLE 2",
      "Markdown": "",
      "Code": "PS\\> dir Serv*.xlsx |  Merge-MulipleSheets  -WorksheetName Software -Key \"*\" -ExcludeProperty Install* -OutputFile Test2.xlsx -OutputSheetName Software -Show\r\nThe server audit files in the previous example also have \"Software\" worksheet, but no single field on that sheet works as a key. Specifying \"*\" for the key produces a compound key using all non-excluded fields (and the installation date and file location are excluded)."
    },
    {
      "Title": "EXAMPLE 3",
      "Markdown": "",
      "Code": "Merge-MulipleSheets -Path hotfixes.xlsx -WorksheetName Serv* -Key hotfixid -OutputFile test2.xlsx -OutputSheetName hotfixes  -HideRowNumbers -Show\r\nThis time all the servers have written their hotfix information to their own worksheets in a shared Excel workbook named \"Hotfixes.xlsx\" (the information was obtained by running Get-Hotfix \\| Sort-Object -Property description,hotfixid \\| Select-Object -Property Description,HotfixID) This ignores any sheets which are not named \"Serv*\", and uses the HotfixID as the key; in this version the row numbers are hidden."
    }
  ]
}
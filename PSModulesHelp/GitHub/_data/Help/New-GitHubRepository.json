{
  "Synopsis": "Create a repository for a user or an organization.",
  "Description": "Creates a new repository for a user or in a specified organization.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n* `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.\n* `repo` scope to create a private repository",
  "Parameters": [
    {
      "Name": null,
      "Type": null,
      "Description": "",
      "Required": false,
      "Position": 0,
      "Aliases": null,
      "DefaultValue": null,
      "Globbing": false,
      "PipelineInput": null,
      "variableLength": false
    }
  ],
  "Notes": [
    "[Create a repository for the authenticated user](https://docs.github.com/rest/repos/repos#create-a-repository-for-the-authenticated-user)\n[Create an organization repository](https://docs.github.com/rest/repos/repos#create-an-organization-repository)"
  ],
  "CommandType": "Filter",
  "Component": [
    null
  ],
  "Inputs": [
    null
  ],
  "Outputs": [
    "System.Management.Automation.PSObject"
  ],
  "Links": [],
  "Examples": [
    {
      "Title": "EXAMPLE 1",
      "Markdown": "",
      "Code": "$params = @{\r\n    Name                     = 'Hello-World'\r\n    Description              = 'This is your first repository'\r\n    Homepage                 = 'https://github.com'\r\n    HasIssues                = $true\r\n    HasProjects              = $true\r\n    HasWiki                  = $true\r\n    HasDiscussions           = $true\r\n    HasDownloads             = $true\r\n    IsTemplate               = $true\r\n    AutoInit                 = $true\r\n    AllowSquashMerge         = $true\r\n    AllowAutoMerge           = $true\r\n    DeleteBranchOnMerge      = $true\r\n    SquashMergeCommitTitle   = 'PR_TITLE'\r\n    SquashMergeCommitMessage = 'PR_BODY'\r\n}\r\nNew-GitHubRepository @params\r\nCreates a new public repository named \"Hello-World\" owned by the authenticated user."
    },
    {
      "Title": "EXAMPLE 2",
      "Markdown": "",
      "Code": "$params = @{\r\n    Owner                    = 'PSModule'\r\n    Name                     = 'Hello-World'\r\n    Description              = 'This is your first repository'\r\n    Homepage                 = 'https://github.com'\r\n    HasIssues                = $true\r\n    HasProjects              = $true\r\n    HasWiki                  = $true\r\n    HasDownloads             = $true\r\n    IsTemplate               = $true\r\n    AutoInit                 = $true\r\n    AllowSquashMerge         = $true\r\n    AllowAutoMerge           = $true\r\n    DeleteBranchOnMerge      = $true\r\n    SquashMergeCommitTitle   = 'PR_TITLE'\r\n    SquashMergeCommitMessage = 'PR_BODY'\r\n}\r\nNew-GitHubRepository @params\r\nCreates a new public repository named \"Hello-World\" owned by the organization \"PSModule\"."
    },
    {
      "Title": "EXAMPLE 3",
      "Markdown": "",
      "Code": "$params = @{\r\n    TemplateOwner      = 'GitHub'\r\n    TemplateRepo       = 'octocat'\r\n    Owner              = 'PSModule'\r\n    Name               = 'MyNewRepo'\r\n    IncludeAllBranches = $true\r\n    Description        = 'My new repo'\r\n    Private            = $true\r\n}\r\nNew-GitHubRepository @params\r\nCreates a new private repository named `MyNewRepo` from the `octocat` template repository owned by `GitHub`."
    },
    {
      "Title": "EXAMPLE 4",
      "Markdown": "",
      "Code": "$params = @{\r\n    ForkOwner         = 'octocat'\r\n    ForkRepo          = 'Hello-World'\r\n    Owner             = 'PSModule'\r\n    Name              = 'MyNewRepo'\r\n    DefaultBranchOnly = $true\r\n}\r\nNew-GitHubRepository @params\r\nCreates a new repository named `MyNewRepo` as a fork of `Hello-World` owned by `octocat`.\r\nOnly the default branch will be forked."
    }
  ]
}
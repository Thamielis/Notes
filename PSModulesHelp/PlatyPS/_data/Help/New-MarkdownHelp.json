{
  "Synopsis": "Creates help in markdown format.",
  "Description": "The New-MarkdownHelp cmdlet creates help in markdown format based on a module, a command, or a file in Microsoft Assistance Markup Language (MAML) format.",
  "Parameters": [
    {
      "Name": null,
      "Type": null,
      "Description": "",
      "Required": false,
      "Position": 0,
      "Aliases": null,
      "DefaultValue": null,
      "Globbing": false,
      "PipelineInput": null,
      "variableLength": false
    }
  ],
  "Notes": [
    ""
  ],
  "CommandType": "Function",
  "Component": [
    null
  ],
  "Inputs": [
    "String[]"
  ],
  "Outputs": [
    "System.IO.FileInfo[]"
  ],
  "Links": [
    "https://github.com/PowerShell/platyPS/blob/master/docs/New-MarkdownHelp.md",
    "https://msdn.microsoft.com/en-us/library/ms404377.aspx",
    "http://stackoverflow.com/questions/5596982/using-powershell-to-write-a-file-in-utf-8-without-the-bom"
  ],
  "Examples": [
    {
      "Title": "Example 1: Create help from a command",
      "Markdown": "",
      "Code": "PS C:\\> function Command03 {param([string]$Value)}\r\nPS C:\\> New-MarkdownHelp -Command \"Command03\" -OutputFolder \".\\docs\"\r\n\r\n\r\n    Directory: D:\\Working\\docs\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----        5/22/2016   6:53 PM            664 Command03.md\r\nThe first command creates a function named Command03 by using standard Windows PowerShell syntax.\r\n\r\nThe second command creates help for that stub function in the .\\docs folder."
    },
    {
      "Title": "Example 2: Create help from a module",
      "Markdown": "",
      "Code": "PS C:\\> Import-Module -Module \"PlatyPS\"\r\nPS C:\\> New-MarkdownHelp -Module \"PlatyPS\" -OutputFolder \".\\docs\" -Force\r\n\r\n\r\n    Directory: D:\\Working\\PlatyPS\\docs\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----        5/22/2016   6:54 PM           1496 Get-HelpPreview.md\r\n-a----        5/22/2016   6:54 PM           3208 Get-MarkdownMetadata.md\r\n-a----        5/22/2016   6:54 PM           3059 New-ExternalHelp.md\r\n-a----        5/22/2016   6:54 PM           2702 New-ExternalHelpCab.md\r\n-a----        5/22/2016   6:54 PM           6234 New-MarkdownHelp.md\r\n-a----        5/22/2016   6:54 PM           2346 Update-MarkdownHelp.md\r\n-a----        5/22/2016   6:54 PM           1633 Update-MarkdownHelpModule.md\r\n-a----        5/22/2016   6:54 PM           1630 Update-MarkdownHelpSchema.md\r\nThe first command loads the PlatyPS module into the current session by using the Import-Module cmdlet.\r\n\r\nThe second command creates help for all the cmdlets in the PlatyPS module. It stores them in the .\\docs folder. This command specifies the Force parameter. Therefore, it overwrites existing help markdown files that have the same name."
    },
    {
      "Title": "Example 3: Create help from an existing MAML file",
      "Markdown": "",
      "Code": "PS C:\\> New-MarkdownHelp -OutputFolder \"D:\\PSReadline\\docs\" -MamlFile 'C:\\Program Files\\WindowsPowerShell\\Modules\\PSReadline\\1.1\\en-US\\Microsoft.PowerShell.PSReadline.dll-help.xml'\r\n\r\n    Directory: D:\\PSReadline\\docs\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----        5/22/2016   6:56 PM           7443 Get-PSReadlineKeyHandler.md\r\n-a----        5/22/2016   6:56 PM           3586 Get-PSReadlineOption.md\r\n-a----        5/22/2016   6:56 PM           1549 Remove-PSReadlineKeyHandler.md\r\n-a----        5/22/2016   6:56 PM           5947 Set-PSReadlineKeyHandler.md\r\n-a----        5/22/2016   6:56 PM          15320 Set-PSReadlineOption.md\r\nThis command creates help in markdown format for the specified help MAML file. You do not have to load the module, as in the previous example. If the module is already loaded, this command creates help based on the MAML file, not on the currently installed module."
    },
    {
      "Title": "Example 4: Create help from an existing MAML file for use in a CAB file",
      "Markdown": "",
      "Code": "PS C:\\> New-MarkdownHelp -OutputFolder \"D:\\PSReadline\\docs\" -MamlFile 'C:\\Program Files\\WindowsPowerShell\\Modules\\PSReadline\\1.1\\en-US\\Microsoft.PowerShell.PSReadline.dll-help.xml' -WithModulePage  -Force -ModuleName \"PSReadLine\"\r\n\r\n\r\n    Directory: D:\\PSReadline\\docs\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----        5/22/2016   6:59 PM           7443 Get-PSReadlineKeyHandler.md\r\n-a----        5/22/2016   6:59 PM           3586 Get-PSReadlineOption.md\r\n-a----        5/22/2016   6:59 PM           1549 Remove-PSReadlineKeyHandler.md\r\n-a----        5/22/2016   6:59 PM           5947 Set-PSReadlineKeyHandler.md\r\n-a----        5/22/2016   6:59 PM          15320 Set-PSReadlineOption.md\r\n-a----        5/22/2016   6:59 PM            942 PSReadLine.md\r\nThis command creates help in markdown format for the specified help MAML file, as in the previous example. This command also specifies the WithModulePage parameter and the ModuleName parameter. The command creates a file named PSReadLine.md that contains links to the other markdown files in this module and metadata that can be used to create .cab files."
    }
  ]
}